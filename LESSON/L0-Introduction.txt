+---------------------+
|INTRODUCTION TO JAVA |
+---------------------+

-> Java is a high-level, object-oriented programming language developed by Sun Microsystems (now owned by Oracle Corporation). 
It was first released in 1995 and has since become one of the most popular programming languages in the world.

Key Features of Java: 
_____________________
    1. Platform Independence:
        - Java is known for its "write once, run anywhere"
        - Java code can run on any platform that has a Java Virtual Machine (JVM) installed.

    2. Object-Oriented Programming
        - Java is an object-oriented language that supports encapsulation, inheritance, and polymorphism.
        - It allows developers to create reusable code and modular programs.

    3. Simple and Familiar Syntax
        - Java's syntax is based on C++ and is easy to learn for developers familiar with C++.
        - It has a relatively simple syntax and is less verbose than many other languages.

    4. Robust Security
        - Java has built-in security features, such as memory management and data encryption.
        - It provides a secure environment for developing and running applications.
        
    5. Large Community and Resources
        - Java has a massive community of developers and a vast ecosystem of libraries and frameworks.
        - It has extensive documentation and resources available online.

History of Java :
_________________
    Java was first released in 1995 by Sun Microsystems.
    It was initially called "Oak" but was later renamed to Java.
    Java 1.0 was released in 1996, and subsequent versions have added new features and improvements.

Java Editions :
_______________
    1. Java SE (Standard Edition)
        - Java SE is the core edition of Java, providing the basic functionality and APIs.
        - It is used for developing desktop applications, mobile apps, and enterprise software.
    2. Java EE (Enterprise Edition)
        - Java EE is an extension of Java SE, providing additional APIs and features for enterprise development.
        - It is used for developing large-scale, distributed applications and web services.
    3. Java ME (Micro Edition)
        - Java ME is a lightweight edition of Java, designed for developing applications on mobile devices and embedded systems.

JVM & JRE & JVM:
________________

JVM (Java Virtual Machine):
    -> The JVM is a virtual machine that runs Java bytecode (.class files) on a computer.
    -> It's the runtime environment for Java, responsible for executing Java programs.
    ->The JVM provides a layer of abstraction between the Java code and the underlying operating system, 
        allowing Java programs to be platform-independent.
    ->The JVM is responsible for tasks like memory management, security, and optimization.
    
JRE (Java Runtime Environment):
    ->The JRE is a package that includes the JVM, as well as other libraries and utilities necessary to run Java programs.
    ->It provides the environment in which Java programs can run, including the JVM, core classes, and supporting files.
    ->The JRE is essentially a bundle of the JVM and other essential components, making it possible to run Java applications on a computer.
    T->he JRE is available for download and installation on its own, allowing users to run Java programs without needing to develop 
        or compile Java code.
    
JDK (Java Development Kit):
    ->The JDK is a package that includes the JRE, as well as development tools and libraries necessary to develop, compile, 
        and run Java programs.
    ->It provides everything you need to develop, test, and run Java applications, including the JRE, compiler (javac),
        debugger, and other development tools.
    ->The JDK is designed for Java developers, providing the necessary tools to create, compile, and package Java applications.
    ->The JDK is typically used by developers, while the JRE is used by end-users who only need to run Java applications.
    
    
In summary:
    JVM: The virtual machine that runs Java bytecode.
    JRE: A package that includes the JVM and other essential components to run Java programs.
    JDK: A package that includes the JRE, as well as development tools and libraries to develop, compile, and run Java programs.
    

PACKAGE ANd LIBRARY:
___________________

    ->A package is a way to organize related classes and interfaces in a project
    
    ->A library is a collection of reusable code that provides additional functionality to an application.

    Purpose:
        - A package is used to organize related classes and interfaces
        - A library is a collection of reusable code that provides additional functionality to an application.
    
    Scope: 
        - A package is a namespace that is specific to a project
        - A library is a separate entity that can be used by multiple projects.

    Distribution: 
        - A package is typically distributed as part of a project's source code
        - A library is distributed as a separate JAR file.
    
    Reusability: 
        - A package is not intended to be reused across multiple projects
        - A library is designed to be reused across multiple projects.

