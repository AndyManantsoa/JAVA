OBJECT ORIENTED PROGRAMING:

    step by step : procedural oriented approach.(in case of C)
    -> There was lagging: not flexible
                          no proper arrangement
                          time consuming

-> So, Object Oriented Programming was introduced:
    it is a rule to follow when we build scalable and flexible application.


OOP: is an approach by which we can design a program or application trully based on object and class

OPPS: (appoach) deals with real world entity

Advantages of OOP:
_________________

- flexibility: it is more flexible more than the procedural approach.
- high security: it is highly secured.
- reusability: it follows the dry principal (ie do not repeat)
- scalability: we can do versioning of the programs with the help of modules and structure given by the oops


CONCEPTS OF OOPs:
___________________

1. CLASSES:
    -> class is a blueprint or template or conctainer or a design pattern which is used to store the properties(instance variable) 
    and behaviors (function) of the resective object
    -> Class does not consum any space in the memory.
    * keyword: class ClassName(){
    }

2. OBJECT:
 Real world :
    -> Entity existing in the real world which has a physical existance and is surrounding us.
    -> Every objects will have properties and behaviors.

 In OOPS :
    -> object is an instance of a class
    * keyword: ClassName objectName = new ClassName();

3. INHERITANCE:
    -> inheritance is a mechanism by which one class can inherit the properties of another class.
    -> it is a process of creating a new class from an existing class.
    -> it is a way of creating a new class from an existing class.

4. ENCAPSULATION:
    -> Encapsulation is the idea of bundling data and its associated methods that operate on 
    that data within a single unit, called a class or object  


5. POLYMORPHISM:
    ->Polymorphism is the ability of an object to take on multiple forms, depending on the context in which it is used.

    ->Types of Polymorphism:
        - Method Overloading: Multiple methods with the same name but different parameters.
        - Method Overriding: A subclass provides a specific implementation for a method that is already 
            defined in its superclass.
            
    -> Key Concepts:
        - Method Signature: The name, return type, and parameter list of a method.
        - Method Resolution: The process of determining which method to call at runtime.
        - Dynamic Method Dispatch: The JVM determines which method to call at runtime based on the object's class and its superclass(es).
    
    ->Benefits:
        - Increased flexibility: Polymorphism allows objects of different classes to be treated as objects of a common superclass.
        - Improved code reuse: Polymorphism enables code reuse by allowing subclasses to inherit behavior from their superclasses and override it as needed.
        - Easier maintenance: Polymorphism makes it easier to modify code by allowing changes to be made at the superclass level, which can then be inherited by subclasses.

6. ABSTRACTION1;

